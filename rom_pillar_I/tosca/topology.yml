tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: Pillar_I_ROM
  template_version: 0.1.0-SNAPSHOT
  template_author: jorge

description: ""

imports:
  - yorc-types:1.1.0
  - eflows4hpc.env:1.1.0
  - tosca-normative-types:1.0.0-ALIEN20
  - imagecreation.ansible:1.3.0
  - alien-base-types:3.0.0
  - org.eflows4hpc.pycompss.plugin:1.1.0
  - dls.ansible:1.4.3-SNAPSHOT

topology_template:
  inputs:
    debug:
      type: boolean
      required: true
      default: false
      description: "Do not redact sensible information on logs"
    user_id:
      type: string
      required: false
      default: ""
      description: "User id to use for authentication may be replaced with workflow input"
    vault_id:
      type: string
      required: false
      default: ""
      description: "User id to use for authentication may be replaced with workflow input"
    container_image_transfer_directory:
      type: string
      required: false
      description: "path of the image on the remote host"
  node_templates:
    ImageCreation:
      metadata:
        a4c_edit_x: 717
        a4c_edit_y: "-714"
      type: imagecreation.ansible.nodes.ImageCreation
      properties:
        service_url: "https://eflows4hpc.bsc.es/image_creation"
        insecure_tls: false
        username: { get_secret: [/secret/data/services_secrets/image_creation, data=user] }
        password: { get_secret: [/secret/data/services_secrets/image_creation, data=password] }
        machine: 
          container_engine: singularity
          mpi: ""
          gpu: ""
          platform: "linux/amd64"
          architecture: sandybridge
        workflow: "rom_pillar_I"
        step_id: "reduce_order_model"
        force: false
        debug: { get_input: debug }
        run_in_standard_mode: true
      requirements:
        - dependsOnAbstractEnvironmentExec_env:
            type_requirement: dependency
            node: AbstractEnvironment
            capability: eflows4hpc.env.capabilities.ExecutionEnvironment
            relationship: tosca.relationships.DependsOn
    DLSDAGImageTransfer:
      metadata:
        a4c_edit_x: 471
        a4c_edit_y: "-716"
      type: dls.ansible.nodes.DLSDAGImageTransfer
      properties:
        image_builder_url: "https://eflows4hpc.bsc.es/image_creation"
        image_builder_vault_secret_path: "/services_secrets/image_creation"
        image_id: "not_used"
        target_path: { get_input: container_image_transfer_directory }
        run_in_standard_mode: true
        dls_api_username: { get_secret: [/secret/data/services_secrets/dls, data=username] }
        dls_api_password: { get_secret: [/secret/data/services_secrets/dls, data=password] }
        dag_id: "transfer_image"
        debug: { get_input: debug }
        user_id: { get_input: user_id }
        vault_id: { get_input: vault_id }
      requirements:
        - dependsOnImageCreationFeature:
            type_requirement: dependency
            node: ImageCreation
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
        - dependsOnAbstractEnvironmentExec_env:
            type_requirement: environment
            node: AbstractEnvironment
            capability: eflows4hpc.env.capabilities.ExecutionEnvironment
            relationship: tosca.relationships.DependsOn
    AbstractEnvironment:
      metadata:
        a4c_edit_x: 990
        a4c_edit_y: "-612"
      type: eflows4hpc.env.nodes.AbstractEnvironment
    PyCOMPSJob:
      metadata:
        a4c_edit_x: 194
        a4c_edit_y: "-529"
      type: org.eflows4hpc.pycompss.plugin.nodes.PyCOMPSJob
      properties:
        submission_params: 
          qos: debug
          python_interpreter: python3
          compss_modules: 
            - "compss/3.2"
          num_nodes: 2
          extra_compss_opts: "--job_execution_dir=${data_path} --forward_cpus_per_node=true --env_script=/reduce_order_model/env.sh"
        application: 
          container_opts: 
            container_opts: "-e"
            container_compss_path: "/opt/view/compss"
          arguments: 
            - "${data_path}/data"
            - "${rom_path}"
            - "${heat_flux_parameters}"
          command: "/reduce_order_model/src/Workflow.py"
        keep_environment: true
      requirements:
        - dependsOnDlsdagImageTransferFeature:
            type_requirement: img_transfer
            node: DLSDAGImageTransfer
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
        - dependsOnAbstractEnvironmentExec_env:
            type_requirement: environment
            node: AbstractEnvironment
            capability: eflows4hpc.env.capabilities.ExecutionEnvironment
            relationship: tosca.relationships.DependsOn
        - dependsOnHttp2SshFeature:
            type_requirement: dependency
            node: Simulation_data_download
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
    Simulation_data_download:
      metadata:
        a4c_edit_x: 199
        a4c_edit_y: "-633"
      type: dls.ansible.nodes.DLSDAGWebdavStageInData
      properties:
        dag_id: "webdav_stagein"
        input_name_for_oid: "data_oid"
        input_name_for_target_path: "data_path"
        force: true
        dls_api_username: { get_secret: [/secret/data/services_secrets/dls, data=username] }
        dls_api_password: { get_secret: [/secret/data/services_secrets/dls, data=password] }
        debug: { get_input: debug }
        user_id: ""
        vault_id: ""
        run_in_standard_mode: false
      requirements:
        - dependsOnAbstractEnvironmentExec_env:
            type_requirement: environment
            node: AbstractEnvironment
            capability: eflows4hpc.env.capabilities.ExecutionEnvironment
            relationship: tosca.relationships.DependsOn
    ROM_upload_center:
      metadata:
        a4c_edit_x: 139
        a4c_edit_y: "-410"
      type: dls.ansible.nodes.DLSDAGModelUpload
      properties:
        dag_id: "mlflow_upload_model"
        subfolder: center
        input_name_for_location: "rom_path"
        dls_api_username: { get_secret: [/secret/data/services_secrets/dls, data=username] }
        dls_api_password: { get_secret: [/secret/data/services_secrets/dls, data=password] }
        debug: { get_input: debug }
        user_id: ""
        vault_id: ""
        run_in_standard_mode: false
      requirements:
        - dependsOnAbstractEnvironmentExec_env:
            type_requirement: environment
            node: AbstractEnvironment
            capability: eflows4hpc.env.capabilities.ExecutionEnvironment
            relationship: tosca.relationships.DependsOn
        - dependsOnPyCompsJob2Feature:
            type_requirement: dependency
            node: PyCOMPSJob
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
    ROM_upload_outside:
      metadata:
        a4c_edit_x: 444
        a4c_edit_y: "-410"
      type: dls.ansible.nodes.DLSDAGModelUpload
      properties:
        dag_id: "mlflow_upload_model"
        subfolder: outside
        input_name_for_location: "rom_path"
        dls_api_username: { get_secret: [/secret/data/services_secrets/dls, data=username] }
        dls_api_password: { get_secret: [/secret/data/services_secrets/dls, data=password] }
        debug: { get_input: debug }
        user_id: ""
        vault_id: ""
        run_in_standard_mode: false
      requirements:
        - dependsOnAbstractEnvironmentExec_env:
            type_requirement: environment
            node: AbstractEnvironment
            capability: eflows4hpc.env.capabilities.ExecutionEnvironment
            relationship: tosca.relationships.DependsOn
        - dependsOnPyCompsJobFeature:
            type_requirement: dependency
            node: PyCOMPSJob
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
  workflows:
    exec_job:
      inputs:
        user_id:
          type: string
          required: true
        vault_id:
          type: string
          required: true
        data_oid:
          type: string
          required: true
        data_path:
          type: string
          required: true
        rom_path:
          type: string
          required: true
        heat_flux_parameters:
          type: string
          required: true
        num_nodes:
          type: integer
          required: false
          default: 1
      steps:
        StageOutData_executing:
          target: ROM_upload_center
          activities:
            - set_state: executing
          on_success:
            - StageOutData_run
        StageOutData_2_executing:
          target: ROM_upload_outside
          activities:
            - set_state: executing
          on_success:
            - StageOutData_2_run
        PyCOMPSJob_submitting:
          target: PyCOMPSJob
          activities:
            - set_state: submitting
          on_success:
            - PyCOMPSJob_submit
        PyCOMPSJob_submit:
          target: PyCOMPSJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - PyCOMPSJob_submitted
        StageOutData_submitted:
          target: ROM_upload_center
          activities:
            - set_state: submitted
          on_success:
            - StageOutData_executing
        StageOutData_2_submitted:
          target: ROM_upload_outside
          activities:
            - set_state: submitted
          on_success:
            - StageOutData_2_executing
        StageOutData_submitting:
          target: ROM_upload_center
          activities:
            - set_state: submitting
          on_success:
            - StageOutData_submit
        StageOutData_2_submitting:
          target: ROM_upload_outside
          activities:
            - set_state: submitting
          on_success:
            - StageOutData_2_submit
        StageOutData_run:
          target: ROM_upload_center
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - StageOutData_executed
        StageOutData_2_run:
          target: ROM_upload_outside
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - StageOutData_2_executed
        PyCOMPSJob_submitted:
          target: PyCOMPSJob
          activities:
            - set_state: submitted
          on_success:
            - PyCOMPSJob_executing
        StageOutData_submit:
          target: ROM_upload_center
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - StageOutData_submitted
        StageOutData_2_submit:
          target: ROM_upload_outside
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - StageOutData_2_submitted
        StageOutData_executed:
          target: ROM_upload_center
          activities:
            - set_state: executed
        StageOutData_2_executed:
          target: ROM_upload_outside
          activities:
            - set_state: executed
        PyCOMPSJob_executing:
          target: PyCOMPSJob
          activities:
            - set_state: executing
          on_success:
            - PyCOMPSJob_run
        PyCOMPSJob_executed:
          target: PyCOMPSJob
          activities:
            - set_state: executed
          on_success:
            - StageOutData_submitting
            - StageOutData_2_submitting
        PyCOMPSJob_run:
          target: PyCOMPSJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - PyCOMPSJob_executed
        Simulation_data_download_run:
          target: Simulation_data_download
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - PyCOMPSJob_submitting
        Simulation_data_download_submit:
          target: Simulation_data_download
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - Simulation_data_download_run
